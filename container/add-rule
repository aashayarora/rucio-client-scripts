#!/usr/bin/env python3

import argparse
import random
import string
import time

from rucio.client import Client
from tqdm import tqdm

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Args')
    parser.add_argument('--priority', default=3, type=int, help='prio')
    parser.add_argument('--size', type=int, default=1000, help='how many files from each dataset')
    parser.add_argument('--source', type=str, required=True, help='source')
    parser.add_argument('--destination', type=str, required=True, help='destination')
    parser.add_argument('--sense', help='use sense', action='store_true')

    args = parser.parse_args()

    if not args.sense:
        print("NOT USING SENSE!! CANCEL NOW IF YOU DIDN'T MEAN TO DO THIS, YOU HAVE 10 SECONDS")
        time.sleep(10)        

    client = Client()

    containers = {
        "T2_US_SDSC": "SDSC",
        "T2_US_Caltech": "CALTECH",
        "T2_US_Nebraska": "NEBRASKA",
        "T1_US_FNAL": "FNAL",
        "T2_US_MGHPCC": "MGHPCC",
    }

    print("Adding replication rule")
    if args.sense:
      rule = client.add_replication_rule(dids=[{"scope": "cms", "name": f"/SenseTest/Run3/{containers[args.source]}"}],
          copies=1,
          activity="SENSE Test",
          rse_expression=args.destination,
          priority=args.priority,
          source_replica_expression=args.source)
    else:
      rule = client.add_replication_rule(dids=[{"scope": "cms", "name": f"/SenseTest/Run3/{containers[args.source]}"}],
          copies=1,
          rse_expression=args.destination,
          priority=args.priority,
          source_replica_expression=args.source)

    print("Rule ID:", rule[0])
